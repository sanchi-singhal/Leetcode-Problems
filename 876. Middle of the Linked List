876. Middle of the Linked List


https://leetcode.com/problems/middle-of-the-linked-list/description/


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = nex
import math
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        current=head
        i=1
        while(current.next!=None):
            i=i+1
            current=current.next
        # print(i)
        count=i//2+1
        print(count)
        current=head
        while(count-1):
            current=current.next
            count-=1
        return current


