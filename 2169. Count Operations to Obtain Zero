2169. Count Operations to Obtain Zero


You are given two non-negative integers num1 and num2.

In one operation, if num1 >= num2, you must subtract num2 from num1, otherwise subtract num1 from num2.

For example, if num1 = 5 and num2 = 4, subtract num2 from num1, thus obtaining num1 = 1 and num2 = 4. However, if num1 = 4 and num2 = 5, after one operation, num1 = 4 and num2 = 1.
Return the number of operations required to make either num1 = 0 or num2 = 0.


https://leetcode.com/problems/count-operations-to-obtain-zero/


class Solution:
    def countOperations(self, num1: int, num2: int) -> int:
        g=0
        c=0
        if(num1==0 or num2==0):
            return 0
        else:
            while(g==0):
                if(num1>=num2):
                    num1=num1-num2
                    c=c+1
                elif(num2>num1):
                    num2=num2-num1
                    c=c+1
                if(num2==0 or num1==0):
                    g=1
            return c
